import cv2 as cv
import numpy as np
import matplotlib.pyplot as plt

# Load the image
image_path = "flower.jpg"  # Replace with the path to your image
image = cv.imread(image_path)

# Create an empty mask for GrabCut
mask = np.zeros(image.shape[:2], np.uint8)

# Define the region of interest (ROI) for GrabCut
rect = (10, 10, image.shape[1] - 10, image.shape[0] - 10)  # Format: (x, y, width, height)

# Initialize the background and foreground models for GrabCut
bgdModel = np.zeros((1, 65), np.float64)
fgdModel = np.zeros((1, 65), np.float64)

# Run the GrabCut algorithm
cv.grabCut(image, mask, rect, bgdModel, fgdModel, 5, cv.GC_INIT_WITH_RECT)

# Create segmentation masks for foreground and background
foreground_mask = np.where((mask == 2) | (mask == 0), 0, 1).astype('uint8')
background_mask = 1 - foreground_mask

# Apply the masks to the original image
foreground_image = image * foreground_mask[:, :, np.newaxis]
background_image = image * background_mask[:, :, np.newaxis]

# change the color to RGB
foreground_image = cv.cvtColor(foreground_image,cv.COLOR_BGR2RGB)
background_image = cv.cvtColor(background_image,cv.COLOR_BGR2RGB)


# Display the results
plt.figure(figsize=(12, 4))
plt.subplot(131), plt.imshow(mask, cmap='gray'), plt.title('Segmentation Mask')
plt.subplot(132), plt.imshow(foreground_image), plt.title('Foreground Image')
plt.subplot(133), plt.imshow(background_image), plt.title('Background Image')
plt.show()

# Create a blurred background by applying a Gaussian blur
background = cv.GaussianBlur(image, (0, 0), 20)  # You can adjust the blur level (20 in this example)


# Combine the foreground and blurred background
enhanced_image = (image * foreground_mask[:, :, np.newaxis] + background * background_mask[:, :, np.newaxis]).astype(np.uint8)

plt.figure(figsize=(12, 6))
plt.subplot(121), plt.imshow(cv.cvtColor(image, cv.COLOR_BGR2RGB)), plt.title('Original Image')
plt.subplot(122), plt.imshow(cv.cvtColor(enhanced_image, cv.COLOR_BGR2RGB)), plt.title('Enhanced Image')
plt.show()
